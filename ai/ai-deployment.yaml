apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-uploads-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-backend
  template:
    metadata:
      labels:
        app: ai-backend
      annotations:
        azure.workload.identity/use: "true"
    spec:
      containers:
      - name: backend
        image: localhost:5000/ai-backend:latest
        ports:
        - containerPort: 89
        envFrom:
        - secretRef:
            name: azure-credentials
        env:
        - name: PORT
          value: "89"
        - name: NODE_ENV
          value: "production"
        # Add initialization command to check DNS and network connectivity
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Testing network connectivity..."
            echo "Resolving Azure SQL Server DNS:"
            nslookup stdtemaserver.database.windows.net || echo "DNS resolution failed"
            echo "Testing connectivity to Azure SQL Server port 1433:"
            nc -zv stdtemaserver.database.windows.net 1433 -w 5 || echo "Connection test failed"
            echo "Starting application..."
            node index.js
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: ai-uploads-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ai-backend
  namespace: default
spec:
  selector:
    app: ai-backend
  ports:
  - protocol: TCP
    port: 89
    targetPort: 89
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-frontend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-frontend
  template:
    metadata:
      labels:
        app: ai-frontend
    spec:
      containers:
      - name: frontend
        image: localhost:5000/ai-frontend:latest
        ports:
        - containerPort: 91
        env:
        - name: API_URL
          value: "/api"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: ai-frontend
  namespace: default
spec:
  selector:
    app: ai-frontend
  ports:
  - protocol: TCP
    port: 91
    targetPort: 91
  type: ClusterIP
